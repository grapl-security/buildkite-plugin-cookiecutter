[GLOBAL]
pants_version = "2.13.0"
backend_packages = [
    "pants.backend.python",
    "pants.backend.python.lint.flake8",
    "pants.backend.python.lint.isort",
    "pants.backend.python.lint.black",
    "pants.backend.python.typecheck.mypy",
    "pants.backend.shell",
    "pants.backend.shell.lint.shellcheck",
    "pants.backend.shell.lint.shfmt",
]

use_deprecated_directory_cli_args_semantics = false
use_deprecated_pex_binary_run_semantics = false

build_ignore = [
    # Don't want the BUILD files in the template to get treated as
    # though they applied to this project.
    '\\{\\{ cookiecutter.__repo_name \\}\\}'
]
pants_ignore = [
    "!.buildkite/",
]

plugins = [
  "toolchain.pants.plugin==0.24.0"
]

remote_cache_read = true
remote_cache_write = true
remote_store_address = "grpcs://cache.toolchain.com:443"
remote_auth_plugin = "toolchain.pants.auth.plugin:toolchain_auth_plugin"

[toolchain-setup]
org = "grapl-security"
repo = "buildkite-plugin-cookiecutter"

[buildsense]
enable = true

# See https://www.pantsbuild.org/docs/anonymous-telemetry
[anonymous-telemetry]
enabled = true
# Randomly generated, and unique to this project
repo_id = "78b5f8fc-7758-4864-8f5d-f36f7e0c9816"

[python]
lockfile_generator = "pex"
interpreter_constraints = ["==3.8.*"]
enable_resolves = true

[python-bootstrap]
search_path = ["<PYENV_LOCAL>", "<PYENV>", "<PATH>"]

[shfmt]
# Indent with 4 spaces
# Indent switch cases
# Redirect operators are followed by a space
args = ["-i 4", "-ci", "-sr"]

[test]
output = "all"
# Pants in our template needs the HOME variable set, so we'll just
# import this into our sandbox.
#
# We also pass the GIT_* variables for the benefit of CI-based test
# runs.
extra_env_vars = [ "HOME", "GIT_AUTHOR_NAME", "GIT_AUTHOR_EMAIL", "GIT_COMMITTER_NAME", "GIT_COMMITTER_EMAIL" ]

[pytest]
lockfile="3rdparty/python/pytest.lockfile"
args = [ "-vv" ]
extra_requirements = [
  "pytest-cookies"
]


[mypy]
config = "mypy.ini"
args = [ "--show-error-codes" ]
extra_type_stubs = [
  "types-toml"
]
